version: '3'

x-base: &base
    env_file:
        - .env

networks:
  etl_network:
    driver: bridge

services:
  postgres:
    image: postgres:latest
    container_name: postgres_etl
    restart: always
    networks:
      - etl_network
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U app -d movies_database" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ./postgresql/data:/var/lib/postgresql/data
    ports:
      - ${POSTGRES_PORT}:5432

  redis:
    image: redis
    container_name: 'etl_redis'
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped
    networks:
      - etl_network
    command:
      --requirepass ${REDIS_PASSWORD}
    ports:
      - "6379:6379"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.7.0
    container_name: elasticsearch
    healthcheck:
      test: [ "CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 5
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
        - ${ELASTIC_PORT}:9200
    networks:
      - etl_network
    volumes:
      - ./elasticsearch_data/data:/usr/share/elasticsearch/data

  etl_service:
    build:
      context: postgres_to_es
    env_file:
      - .env
    networks:
      - etl_network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy

